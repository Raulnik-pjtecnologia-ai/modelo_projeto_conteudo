# Script PowerShell para Executar Curadoria Completa
# Integra verifica√ß√£o de capas, dados, v√≠deos, fontes e busca de fontes confi√°veis

param(
    [string]$Diretorio = "",
    [int]$MinPontuacao = 70,
    [switch]$Ajuda
)

if ($Ajuda) {
    Write-Host "=== CUARDORIA COMPLETA DE CONTE√öDO ===" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Uso: .\executar_curadoria_completa.ps1 [op√ß√µes]"
    Write-Host ""
    Write-Host "Op√ß√µes:"
    Write-Host "  -Diretorio <caminho>    Diret√≥rio espec√≠fico para analisar"
    Write-Host "  -MinPontuacao <numero>  Pontua√ß√£o m√≠nima para aprova√ß√£o (padr√£o: 70)"
    Write-Host "  -Ajuda                  Mostra esta ajuda"
    Write-Host ""
    Write-Host "Funcionalidades:"
    Write-Host "  ‚úÖ Verifica√ß√£o de capas (.jpg, .png, etc.)"
    Write-Host "  üìä An√°lise de dados e gr√°ficos"
    Write-Host "  üé• Verifica√ß√£o de v√≠deos relacionados"
    Write-Host "  üìö An√°lise de fontes e refer√™ncias"
    Write-Host "  üîç Busca de fontes confi√°veis usando MCPs"
    Write-Host "  üìà Relat√≥rio consolidado com recomenda√ß√µes"
    Write-Host ""
    Write-Host "Exemplos:"
    Write-Host "  .\executar_curadoria_completa.ps1"
    Write-Host "  .\executar_curadoria_completa.ps1 -Diretorio '2_conteudo\04_publicado'"
    Write-Host "  .\executar_curadoria_completa.ps1 -MinPontuacao 80"
    Write-Host ""
    exit 0
}

# Configura√ß√µes
$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Definition
$ProjetoRoot = Split-Path -Parent $ScriptDir
$PythonScript = Join-Path $ScriptDir "curadoria_completa.py"

Write-Host "üîç CUARDORIA COMPLETA DE CONTE√öDO" -ForegroundColor Cyan
Write-Host "===================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se o Python est√° dispon√≠vel
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ Python encontrado: $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python n√£o encontrado. Instale o Python 3.7+ e tente novamente." -ForegroundColor Red
    exit 1
}

# Verificar se o script Python existe
if (-not (Test-Path $PythonScript)) {
    Write-Host "‚ùå Script de curadoria completa n√£o encontrado: $PythonScript" -ForegroundColor Red
    exit 1
}

# Verificar depend√™ncias
Write-Host "üîç Verificando depend√™ncias..." -ForegroundColor Yellow

$dependencias = @(
    "curadoria_automatica.py",
    "verificar_fontes_mcp.py", 
    "buscar_fontes_confiaveis.py"
)

foreach ($dep in $dependencias) {
    $caminho_dep = Join-Path $ScriptDir $dep
    if (Test-Path $caminho_dep) {
        Write-Host "  ‚úÖ $dep" -ForegroundColor Green
    } else {
        Write-Host "  ‚ùå $dep n√£o encontrado" -ForegroundColor Red
        Write-Host "  Certifique-se de que todos os scripts est√£o no diret√≥rio scripts/" -ForegroundColor Yellow
        exit 1
    }
}

# Construir comando
$comando = "python `"$PythonScript`""

if ($Diretorio) {
    $comando += " --diretorio `"$Diretorio`""
}

$comando += " --projeto `"$ProjetoRoot`""
$comando += " --min-pontuacao $MinPontuacao"

Write-Host ""
Write-Host "üìÅ Diret√≥rio do projeto: $ProjetoRoot" -ForegroundColor Yellow
if ($Diretorio) {
    Write-Host "üìÇ Diret√≥rio para analisar: $Diretorio" -ForegroundColor Yellow
} else {
    Write-Host "üìÇ Analisando diret√≥rio padr√£o: 2_conteudo" -ForegroundColor Yellow
}
Write-Host "üéØ Pontua√ß√£o m√≠nima para aprova√ß√£o: $MinPontuacao%" -ForegroundColor Yellow
Write-Host ""

# Executar curadoria completa
Write-Host "üöÄ Iniciando curadoria completa..." -ForegroundColor Green
Write-Host ""

try {
    Write-Host "üìã Executando verifica√ß√µes..." -ForegroundColor Cyan
    Invoke-Expression $comando
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host ""
        Write-Host "‚úÖ Curadoria completa conclu√≠da com sucesso!" -ForegroundColor Green
        Write-Host "üìä Relat√≥rios salvos em: docs\relatorios\" -ForegroundColor Cyan
        Write-Host ""
        Write-Host "üìà Resumo da an√°lise:" -ForegroundColor Yellow
        Write-Host "  ‚Ä¢ Verifica√ß√£o de capas (.jpg, .png, etc.)" -ForegroundColor White
        Write-Host "  ‚Ä¢ An√°lise de dados e gr√°ficos" -ForegroundColor White
        Write-Host "  ‚Ä¢ Verifica√ß√£o de v√≠deos relacionados" -ForegroundColor White
        Write-Host "  ‚Ä¢ An√°lise de fontes e refer√™ncias" -ForegroundColor White
        Write-Host "  ‚Ä¢ Busca de fontes confi√°veis" -ForegroundColor White
        Write-Host "  ‚Ä¢ Relat√≥rio consolidado gerado" -ForegroundColor White
    } else {
        Write-Host ""
        Write-Host "‚ùå Erro durante a execu√ß√£o da curadoria completa." -ForegroundColor Red
        Write-Host "Verifique os logs para mais detalhes." -ForegroundColor Yellow
    }
} catch {
    Write-Host ""
    Write-Host "‚ùå Erro ao executar curadoria completa: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host ""
Write-Host "Pressione qualquer tecla para continuar..."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
