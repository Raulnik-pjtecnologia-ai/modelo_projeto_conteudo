#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Script Simplificado para Sincronizar Conte√∫dos
Sincroniza apenas o texto, sem imagens problem√°ticas
"""

import os
import sys
import requests
import json
from datetime import datetime
import time

sys.stdout.reconfigure(encoding='utf-8')

NOTION_TOKEN = os.environ.get("NOTION_TOKEN", "")
if not NOTION_TOKEN:
    print("ERRO: Configure NOTION_TOKEN")
    sys.exit(1)

# ID da biblioteca Editorial de Aluno (PR√â-ENEM)
DATABASE_ALUNO = "2695113a-91a3-81dd-bfc4-fc8e4df72e7f"

HEADERS = {
    "Authorization": f"Bearer {NOTION_TOKEN}",
    "Content-Type": "application/json",
    "Notion-Version": "2022-06-28"
}

def print_secao(titulo):
    print("\n" + "="*80)
    print(titulo)
    print("="*80)

def criar_pagina_simples(database_id, titulo, conteudo_texto):
    """Cria p√°gina simples no Notion apenas com texto"""
    print(f"üìù Criando p√°gina: {titulo}")
    
    # Converter texto em blocos simples
    linhas = conteudo_texto.split('\n')
    blocos = []
    
    for linha in linhas:
        linha = linha.strip()
        if not linha:
            continue
            
        if linha.startswith('# '):
            titulo_sec = linha[2:].strip()
            blocos.append({
                "type": "heading_1",
                "heading_1": {
                    "rich_text": [{"type": "text", "text": {"content": titulo_sec}}]
                }
            })
        elif linha.startswith('## '):
            subtitulo = linha[3:].strip()
            blocos.append({
                "type": "heading_2",
                "heading_2": {
                    "rich_text": [{"type": "text", "text": {"content": subtitulo}}]
                }
            })
        elif linha.startswith('### '):
            subsubtitulo = linha[4:].strip()
            blocos.append({
                "type": "heading_3",
                "heading_3": {
                    "rich_text": [{"type": "text", "text": {"content": subsubtitulo}}]
                }
            })
        elif linha.startswith('- '):
            item = linha[2:].strip()
            blocos.append({
                "type": "bulleted_list_item",
                "bulleted_list_item": {
                    "rich_text": [{"type": "text", "text": {"content": item}}]
                }
            })
        else:
            if linha and not linha.startswith('![') and not linha.startswith('*'):
                blocos.append({
                    "type": "paragraph",
                    "paragraph": {
                        "rich_text": [{"type": "text", "text": {"content": linha}}]
                    }
                })
    
    # Criar p√°gina
    url = f"https://api.notion.com/v1/pages"
    payload = {
        "parent": {"database_id": database_id},
        "properties": {
            "Title": {
                "title": [
                    {
                        "type": "text",
                        "text": {"content": titulo}
                    }
                ]
            },
            "Status Editorial": {
                "select": {"name": "Aprovado"}
            },
            "Status": {
                "select": {"name": "Publicado"}
            },
            "Prioridade": {
                "select": {"name": "Alta"}
            },
            "Tags √Årea": {
                "multi_select": [{"name": "Geral"}]
            },
            "Tags Tipo": {
                "multi_select": [{"name": "Guia"}]
            },
            "Tags Tema": {
                "multi_select": [
                    {"name": "ENEM"},
                    {"name": "Estudos"},
                    {"name": "Prepara√ß√£o"},
                    {"name": "Alunos"},
                    {"name": "Educa√ß√£o"},
                    {"name": "2025"}
                ]
            },
            "Fun√ß√£o Alvo": {
                "multi_select": [
                    {"name": "Pedag√≥gica"},
                    {"name": "Estrat√©gica"}
                ]
            },
            "P√∫blico Alvo": {
                "multi_select": [
                    {"name": "Estudantes ENEM"},
                    {"name": "Pr√©-vestibulandos"}
                ]
            },
            "Coment√°rios": {
                "rich_text": [
                    {
                        "type": "text",
                        "text": {
                            "content": f"Conte√∫do criado e sincronizado em {datetime.now().strftime('%d/%m/%Y %H:%M')} - Aplica√ß√£o das 5 regras estabelecidas"
                        }
                    }
                ]
            }
        },
        "children": blocos[:50]  # Limitar a 50 blocos por vez
    }
    
    response = requests.post(url, headers=HEADERS, json=payload)
    
    if response.status_code != 200:
        print(f"‚ùå Erro ao criar p√°gina: {response.status_code}")
        print(f"Resposta: {response.text}")
        return None
    
    data = response.json()
    page_id = data["id"]
    print(f"‚úÖ P√°gina criada com sucesso: {page_id}")
    
    return page_id

def processar_sincronizacao_simples(database_id):
    """Processa sincroniza√ß√£o simplificada"""
    print_secao("SINCRONIZA√á√ÉO SIMPLIFICADA DE CONTE√öDOS")
    print(f"Data: {datetime.now().strftime('%d/%m/%Y %H:%M')}")
    print("üéØ Objetivo: Sincronizar conte√∫dos apenas com texto")
    
    # Conte√∫dos para sincronizar
    conteudos = [
        {
            "titulo": "Estrat√©gias de Estudo ENEM 2025: Guia Completo",
            "conteudo": """# Estrat√©gias de Estudo ENEM 2025: Guia Completo

## Introdu√ß√£o
O ENEM 2025 exige prepara√ß√£o estrat√©gica e eficiente. Este guia apresenta as melhores estrat√©gias de estudo comprovadas.

## Cronograma de Estudos Eficaz
- Cronograma Semanal: 6 dias de estudo + 1 dia de descanso
- Sess√µes de 2-3 horas: Com pausas de 15 minutos
- Revis√µes Regulares: 30 minutos di√°rios de revis√£o
- Simulados Mensais: Avalia√ß√£o completa do progresso

## T√©cnicas de Resolu√ß√£o de Quest√µes
- Leia o Enunciado Completo: Antes de olhar as alternativas
- Identifique o Comando: O que a quest√£o est√° pedindo
- Destaque Informa√ß√µes Importantes: Palavras-chave e dados
- Elimine Alternativas Absurdas: Reduza as op√ß√µes

## Bem-Estar e Sa√∫de Mental
- T√©cnicas de Relaxamento: Medita√ß√£o e respira√ß√£o
- Exerc√≠cios F√≠sicos: 30 minutos, 3x por semana
- Alimenta√ß√£o Equilibrada: Frutas, verduras e prote√≠nas
- Sono Adequado: 8 horas por noite

## Conclus√£o
Com organiza√ß√£o, disciplina e as t√©cnicas apresentadas, voc√™ estar√° preparado para conquistar uma excelente pontua√ß√£o."""
        },
        {
            "titulo": "Abordagem Interdisciplinar ENEM 2025",
            "conteudo": """# Abordagem Interdisciplinar ENEM 2025

## Introdu√ß√£o
O ENEM valoriza a capacidade de articular diferentes √°reas do conhecimento, exigindo uma abordagem interdisciplinar.

## Conex√µes Entre √Åreas
- Ci√™ncias da Natureza + Matem√°tica: C√°lculos e f√≥rmulas
- Ci√™ncias Humanas + Linguagens: Interpreta√ß√£o e contexto
- Todas as √Åreas + Reda√ß√£o: Temas transversais

## Temas Transversais
- Sustentabilidade e Meio Ambiente
- Cidadania e Direitos Humanos
- Tecnologia e Inova√ß√£o
- Globaliza√ß√£o e Economia

## Estrat√©gias de Integra√ß√£o
- Mapas Conceituais: Represente rela√ß√µes entre conceitos
- Estudos de Caso: Aplique conhecimentos em contextos
- Projetos Interdisciplinares: Escolha assuntos complexos

## Conclus√£o
A abordagem interdisciplinar √© fundamental para o sucesso no ENEM 2025."""
        },
        {
            "titulo": "Sistema de Monitoramento de Progresso ENEM 2025",
            "conteudo": """# Sistema de Monitoramento de Progresso ENEM 2025

## Introdu√ß√£o
O monitoramento cont√≠nuo do progresso √© essencial para o sucesso no ENEM 2025.

## Ferramentas de Monitoramento
- Planilha de Acompanhamento: Metas semanais e horas de estudo
- Gr√°ficos de Evolu√ß√£o: Progresso ao longo dos meses
- An√°lise de Desempenho: Quest√µes corretas e tempo de resolu√ß√£o

## M√©tricas Essenciais
- M√©tricas Quantitativas: Horas de estudo, quest√µes resolvidas
- M√©tricas Qualitativas: Compreens√£o e aplica√ß√£o
- M√©tricas de Desempenho: Taxa de acerto e consist√™ncia

## Sistema de Avalia√ß√£o
- Avalia√ß√£o Semanal: Metas alcan√ßadas e ajustes
- Avalia√ß√£o Mensal: Progresso geral e simulados
- Avalia√ß√£o Trimestral: Revis√£o completa e mudan√ßas

## Conclus√£o
O monitoramento de progresso √© uma ferramenta poderosa para o sucesso no ENEM 2025."""
        },
        {
            "titulo": "Bem-Estar e Sa√∫de Mental ENEM 2025",
            "conteudo": """# Bem-Estar e Sa√∫de Mental ENEM 2025

## Introdu√ß√£o
O bem-estar e a sa√∫de mental s√£o fundamentais para o sucesso no ENEM 2025.

## T√©cnicas de Relaxamento
- Medita√ß√£o e Mindfulness: 10-15 minutos di√°rios
- Exerc√≠cios de Respira√ß√£o: T√©cnicas de controle da ansiedade
- T√©cnicas de Visualiza√ß√£o: Imagine o sucesso

## Exerc√≠cios F√≠sicos
- Atividades Aer√≥bicas: Caminhada, corrida, ciclismo
- Exerc√≠cios de For√ßa: Muscula√ß√£o e calistenia
- Alongamento e Flexibilidade: 15 minutos di√°rios

## Alimenta√ß√£o e Hidrata√ß√£o
- Alimenta√ß√£o Equilibrada: Frutas, verduras e prote√≠nas
- Alimentos para o C√©rebro: Peixes, frutas vermelhas
- Hidrata√ß√£o Adequada: 2-3 litros de √°gua por dia

## Sono e Descanso
- Higiene do Sono: Hor√°rio regular e ambiente adequado
- Qualidade do Sono: 8 horas de dura√ß√£o ideal
- Pausas e Descanso: 15 minutos a cada 2 horas

## Conclus√£o
Cuidar de si mesmo n√£o √© ego√≠smo, √© necessidade - invista em seu bem-estar!"""
        }
    ]
    
    sucessos = 0
    erros = 0
    paginas_criadas = []
    
    for i, conteudo in enumerate(conteudos, 1):
        print(f"\n--- Conte√∫do {i}/{len(conteudos)} ---")
        print(f"T√≠tulo: {conteudo['titulo']}")
        
        # Criar p√°gina no Notion
        page_id = criar_pagina_simples(database_id, conteudo['titulo'], conteudo['conteudo'])
        if page_id:
            sucessos += 1
            paginas_criadas.append({"titulo": conteudo['titulo'], "id": page_id})
        else:
            erros += 1
        
        time.sleep(2)  # Pausa para n√£o sobrecarregar a API
    
    # Relat√≥rio final
    print_secao("RELAT√ìRIO FINAL")
    print(f"üìä Total de conte√∫dos processados: {len(conteudos)}")
    print(f"‚úÖ Sucessos: {sucessos}")
    print(f"‚ùå Erros: {erros}")
    print(f"üìà Taxa de sucesso: {(sucessos/len(conteudos)*100):.1f}%")
    
    if paginas_criadas:
        print(f"\nüìÑ P√°ginas criadas:")
        for pagina in paginas_criadas:
            print(f"   - {pagina['titulo']} ({pagina['id']})")
    
    if sucessos == len(conteudos):
        print("üéâ SINCRONIZA√á√ÉO COMPLETA COM SUCESSO!")
    else:
        print("‚ö†Ô∏è Alguns conte√∫dos precisam de aten√ß√£o manual")

if __name__ == "__main__":
    processar_sincronizacao_simples(DATABASE_ALUNO)
