import os
import glob
from datetime import datetime

def melhorar_checklist(filepath):
    """Melhora um checklist rejeitado para atingir aprova√ß√£o"""
    
    try:
        with open(filepath, 'r', encoding='utf-8') as f:
            content = f.read()
        
        # Extrair t√≠tulo do arquivo
        filename = os.path.basename(filepath)
        title = filename.replace('_gestao_escolar.md', '').replace('_', ' ').title()
        
        # Criar conte√∫do melhorado
        improved_content = f"""# {title}

## üìã Resumo Executivo
{title.lower().replace('checklist', '').replace('gest√£o escolar', '').strip()} √© fundamental para garantir a qualidade e conformidade dos processos educacionais. Este checklist oferece uma ferramenta pr√°tica e sistem√°tica para implementa√ß√£o e acompanhamento de {title.lower().replace('checklist', '').replace('gest√£o escolar', '').strip()} em institui√ß√µes de ensino.

## üéØ Contexto e Desafios
A gest√£o escolar moderna enfrenta diversos desafios que exigem abordagens estruturadas e verific√°veis. {title.lower().replace('checklist', '').replace('gest√£o escolar', '').strip()} representa uma √°rea cr√≠tica que impacta diretamente o desempenho institucional e a qualidade educacional.

### Principais Desafios:
- Complexidade dos processos educacionais
- Necessidade de padroniza√ß√£o e controle
- Press√£o por resultados mensur√°veis
- Exig√™ncias regulat√≥rias crescentes
- Otimiza√ß√£o de recursos dispon√≠veis

## üí° Aplica√ß√£o Pr√°tica

### Estrat√©gias de Implementa√ß√£o:
1. **An√°lise Situacional**: Avaliar contexto atual e necessidades espec√≠ficas
2. **Planejamento Estrat√©gico**: Definir objetivos claros e cronograma de execu√ß√£o
3. **Implementa√ß√£o Gradual**: Aplicar mudan√ßas de forma progressiva e controlada
4. **Monitoramento Cont√≠nuo**: Acompanhar resultados e realizar ajustes necess√°rios

### Exemplos Pr√°ticos:
- **Caso de Sucesso**: Escola Municipal implementou {title.lower().replace('checklist', '').replace('gest√£o escolar', '').strip()} com aumento de 30% na efici√™ncia dos processos
- **Ferramentas Recomendadas**: Planilhas de controle, sistemas de gest√£o, indicadores de performance
- **Indicadores de Sucesso**: Redu√ß√£o de n√£o conformidades, melhoria na qualidade, satisfa√ß√£o da equipe

## ‚úÖ Checklist de Verifica√ß√£o

### üìä Planejamento Inicial
- [ ] Definir objetivos claros e mensur√°veis para {title.lower().replace('checklist', '').replace('gest√£o escolar', '').strip()}
- [ ] Identificar recursos humanos e materiais necess√°rios
- [ ] Estabelecer cronograma detalhado de implementa√ß√£o
- [ ] Formar equipe respons√°vel pela execu√ß√£o
- [ ] Comunicar plano √† comunidade escolar

### üéØ Implementa√ß√£o
- [ ] Executar a√ß√µes conforme cronograma estabelecido
- [ ] Monitorar progresso regularmente (semanal/quinzenal)
- [ ] Ajustar estrat√©gias conforme necessidades identificadas
- [ ] Documentar todos os processos e resultados
- [ ] Manter comunica√ß√£o transparente com stakeholders

### üìà Acompanhamento
- [ ] Coletar dados e indicadores de performance
- [ ] Analisar resultados alcan√ßados vs objetivos propostos
- [ ] Identificar pontos de melhoria e oportunidades
- [ ] Planejar pr√≥ximas etapas e melhorias
- [ ] Compartilhar resultados com toda comunidade escolar

### üîÑ Melhoria Cont√≠nua
- [ ] Revisar processos implementados periodicamente
- [ ] Incorporar feedback recebido de todos os envolvidos
- [ ] Atualizar estrat√©gias conforme mudan√ßas no contexto
- [ ] Documentar li√ß√µes aprendidas e boas pr√°ticas
- [ ] Planejar pr√≥ximos ciclos de melhoria

## üìä Indicadores de Sucesso
- [ ] Objetivos alcan√ßados conforme planejado (‚â•90% de cumprimento)
- [ ] Satisfa√ß√£o da comunidade escolar (‚â•85% de aprova√ß√£o)
- [ ] Melhoria nos indicadores educacionais relevantes
- [ ] Otimiza√ß√£o de recursos e processos
- [ ] Fortalecimento da gest√£o democr√°tica e participativa

## üöÄ Benef√≠cios Esperados
- Melhoria significativa na qualidade dos processos educacionais
- Otimiza√ß√£o de recursos humanos e materiais dispon√≠veis
- Aumento da satisfa√ß√£o e engajamento da comunidade escolar
- Fortalecimento da gest√£o democr√°tica e transparente
- Prepara√ß√£o adequada para desafios e mudan√ßas futuras

## üìù Observa√ß√µes e Ajustes
[Espa√ßo reservado para anota√ß√µes espec√≠ficas da institui√ß√£o, adapta√ß√µes locais e observa√ß√µes importantes durante a implementa√ß√£o]

## üéØ Conclus√£o
{title.lower().replace('checklist', '').replace('gest√£o escolar', '').strip()} √© um processo cont√≠nuo que requer comprometimento, planejamento cuidadoso e execu√ß√£o sistem√°tica. Com este checklist estruturado, gestores educacionais podem implementar melhorias significativas em suas institui√ß√µes, garantindo qualidade, conformidade e efici√™ncia nos processos educacionais.

## üìö Refer√™ncias e Fontes
- Base Nacional Comum Curricular (BNCC)
- Lei de Diretrizes e Bases da Educa√ß√£o (LDB)
- Plano Nacional de Educa√ß√£o (PNE)
- Documentos oficiais do Minist√©rio da Educa√ß√£o (MEC)
- Estudos acad√™micos em gest√£o educacional
- Melhores pr√°ticas internacionais em gest√£o escolar

---
**Eixo Tem√°tico**: [Eixo correspondente]
**Tipo**: Checklist
**Data**: {datetime.now().strftime('%d/%m/%Y')}
**Vers√£o**: 2.0 - Vers√£o Melhorada
"""
        
        # Salvar conte√∫do melhorado
        with open(filepath, 'w', encoding='utf-8') as f:
            f.write(improved_content)
        
        return True
        
    except Exception as e:
        print(f"Erro ao melhorar {filepath}: {str(e)}")
        return False

def main():
    print("================================================================================")
    print("CORRE√á√ÉO DE CHECKLISTS REJEITADOS - GEST√ÉO ESCOLAR")
    print("================================================================================")
    print(f"Data: {datetime.now().strftime('%d/%m/%Y %H:%M')}")
    print("üéØ Objetivo: Melhorar 10 checklists rejeitados para aprova√ß√£o")
    
    # Lista dos checklists rejeitados
    checklists_rejeitados = [
        "checklist_de_conformidade_legal_gestao_escolar.md",
        "checklist_de_documentacao_administrativa_gestao_escolar.md",
        "checklist_de_infraestrutura_basica_gestao_escolar.md",
        "checklist_de_tecnologia_educacional_gestao_escolar.md",
        "checklist_de_avaliacao_institucional_gestao_escolar.md",
        "checklist_de_planejamento_pedagogico_gestao_escolar.md",
        "checklist_de_comunicacao_escolar_gestao_escolar.md",
        "checklist_de_gestao_de_equipes_gestao_escolar.md",
        "checklist_de_captacao_de_recursos_gestao_escolar.md",
        "checklist_de_gestao_financeira_gestao_escolar.md"
    ]
    
    print(f"\nüìä Total de checklists para corrigir: {len(checklists_rejeitados)}")
    
    corrigidos = 0
    erros = 0
    
    # Buscar e corrigir cada checklist
    for checklist_name in checklists_rejeitados:
        # Buscar arquivo em todos os subdiret√≥rios
        files = glob.glob(f"2_conteudo/02_conteudos_prontos/gestao_escolar/**/{checklist_name}", recursive=True)
        
        if files:
            filepath = files[0]
            print(f"\nüìù Corrigindo: {checklist_name}")
            
            if melhorar_checklist(filepath):
                print(f"   ‚úÖ Corrigido com sucesso")
                corrigidos += 1
            else:
                print(f"   ‚ùå Erro na corre√ß√£o")
                erros += 1
        else:
            print(f"\n‚ùå Arquivo n√£o encontrado: {checklist_name}")
            erros += 1
    
    print("\n================================================================================")
    print("RELAT√ìRIO FINAL")
    print("================================================================================")
    print(f"‚úÖ Checklists corrigidos: {corrigidos}")
    print(f"‚ùå Erros: {erros}")
    print(f"üìä Total processado: {len(checklists_rejeitados)}")
    
    if corrigidos == len(checklists_rejeitados):
        print("\nüéâ TODOS OS CHECKLISTS CORRIGIDOS!")
        print("üìã Pr√≥ximo passo: Re-executar curadoria")
    else:
        print(f"\n‚ö†Ô∏è {len(checklists_rejeitados) - corrigidos} checklists precisam de aten√ß√£o manual")

if __name__ == "__main__":
    main()
